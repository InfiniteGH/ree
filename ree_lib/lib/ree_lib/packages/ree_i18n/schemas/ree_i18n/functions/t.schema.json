{
  "schema_type": "object",
  "ree_version": "0.1.0",
  "name": "t",
  "path": "packages/ree_i18n/package/ree_i18n/functions/t.rb",
  "mount_as": "fn",
  "class": "ReeI18n::T",
  "factory": null,
  "methods": [
    {
      "doc": "Translates, pluralizes and interpolates a given key using a given locale,\nscope, and default, as well as interpolation values.\n\nFull args example:\n  t(\n    :salutation,\n    {gender: 'w', name: 'Smith'},\n    {\n      throw: false,\n      raise: false,\n      locale: :en,\n      scope: :people,\n      default: :person,\n      deep_interpolation: true,\n      count: 1,\n      exception_handler?: Proc.new { |*args| ...},\n      default_by_locale: :en\n    }\n  )",
      "throws": [
        "ArgumentError",
        "I18n::Disabled",
        "I18n::MissingTranslation",
        "I18n::InvalidLocale",
        "I18n::ArgumentError",
        "UncaughtThrowError",
        "I18n::InvalidPluralizationData"
      ],
      "return": "Or[String, Hash]",
      "args": [
        {
          "arg": "key",
          "type": "Nilor[Or[String, Symbol]]"
        },
        {
          "arg": "context",
          "type": "HashOf[Or[String, Symbol], Any]"
        },
        {
          "arg": "options",
          "type": "Ksplat[:throw? => Bool, :raise? => Bool, :locale? => Symbol, :scope? => Or[String, Symbol], :default? => Or[String, Symbol], :deep_interpolation? => Bool, :count? => Integer, :exception_handler? => Or[Symbol, Proc], :default_by_locale? => Or[Symbol]]"
        }
      ]
    }
  ],
  "links": [
    {
      "target": "except",
      "package_name": "ree_hash",
      "as": "except",
      "imports": [

      ]
    }
  ]
}